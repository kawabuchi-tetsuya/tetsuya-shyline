# テスト(rspec)、コードルール(rubocop, eslint, prettier)のチェックを行う
name: Continuous Integration

# 当 workflow の実行タイミング
# ブランチへの push 時
on:
  push:
    branches:
      - main
  pull_request:

# 当 workflow が行う処理
jobs:
  # 処理① rspec がオールグリーンであることをチェック
  rspec:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend
    services:
      mysql:
        image: mysql:8.4
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: api_test
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache bundler dependencies
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundler-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.1
          bundler-cache: true

      - name: Bundler and gem install
        run: |
          bundle config set path 'vendor/bundle'
          bundle install --without development --jobs 4 --retry 3

      - name: Database create and migrate
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create RAILS_ENV=test
          bundle exec ridgepole --apply --file db/schemas/Schemafile --config config/database.yml --env test

      - name: Run rspec
        run: bundle exec bin/rspec

  # 処理② rubocop のルール違反がないことをチェック
  rubocop:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache bundler dependencies
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundler-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.1
          bundler-cache: true

      - name: Bundler and gem install
        run: |
          bundle config set path 'vendor/bundle'
          bundle install --without development --jobs 4 --retry 3

      - name: Run rubocop
        run: bundle exec rubocop --server

  # 処理③ eslint(& prettier) のルール違反がないことをチェック
  eslint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend/app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: frontend/app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install packages
        run: npm install

      - name: Run lint
        run: npm run lint
